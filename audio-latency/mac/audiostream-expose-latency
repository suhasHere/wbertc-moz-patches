# HG changeset patch
# Parent a9fc58c4003bca6f3075b7fdcf74c65e980ce42d
# User Paul Adenot <paul@paul.cx>
Bug 904617 -  Expose Audio Stream Latency

diff --git a/content/media/AudioStream.cpp b/content/media/AudioStream.cpp
--- a/content/media/AudioStream.cpp
+++ b/content/media/AudioStream.cpp
@@ -317,16 +317,17 @@ class BufferedAudioStream : public Audio
   void SetVolume(double aVolume);
   void Drain();
   void Start();
   void Pause();
   void Resume();
   int64_t GetPosition();
   int64_t GetPositionInFrames();
   int64_t GetPositionInFramesInternal();
+  int64_t GetLatencyInFrames();
   bool IsPaused();
   // This method acquires the monitor and forward the call to the base
   // class, to prevent a race on |mTimeStretcher|, in
   // |AudioStream::EnsureTimeStretcherInitialized|.
   nsresult EnsureTimeStretcherInitialized();
 
 private:
   static long DataCallback_S(cubeb_stream*, void* aThis, void* aBuffer, long aFrames)
@@ -770,16 +771,27 @@ BufferedAudioStream::GetPositionInFrames
   // during stream underruns.
   uint64_t adjustedPosition = 0;
   if (position >= mLostFrames) {
     adjustedPosition = position - mLostFrames;
   }
   return std::min<uint64_t>(adjustedPosition, INT64_MAX);
 }
 
+int64_t
+BufferedAudioStream::GetLatencyInFrames()
+{
+  uint32_t latency;
+  if(cubeb_stream_get_latency(mCubebStream, &latency)) {
+    NS_WARNING("Could not get cubeb latency.");
+    return 0;
+  }
+  return static_cast<int64_t>(latency);
+}
+
 bool
 BufferedAudioStream::IsPaused()
 {
   MonitorAutoLock mon(mMonitor);
   return mState == STOPPED;
 }
 
 long
